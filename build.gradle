plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.0'
}

sourceCompatibility = '11'
targetCompatibility = '11'


allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
def selenideVersion = '6.10.1',
    junitJupiterVersion = '5.9.0',
        allureselenide = '2.20.0',
    slf4jVersion = '2.0.5',
    javafaker = '1.0.2',
    icu4j = '51.1'




dependencies {

    testImplementation(
            "com.ibm.icu:icu4j:$icu4j",
            "com.github.javafaker:javafaker:$javafaker",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureselenide",
            "org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}



test {
    useJUnitPlatform()
}

help {
    doFirst {
        println ""
        println "************************************************************************ "
        println "***                                                                  *** "
        println "*** Welcome to https://dev.gasworkers.ru/ !                          *** "
        println "***                                                                  *** "
        println "*** ./gradlew help                                                   *** "
        println "***                                                                  *** "
        println "************************************************************************ "
        println ""
    }
}

/* different approach to manage dependencies
dependencies {
    testImplementation('com.codeborne:selenide:6.10.1',
            'io.qameta.allure:allure-selenide:2.20.0')
    testImplementation('org.slf4j:slf4j-simple:2.0.5')

    implementation 'com.github.javafaker:javafaker:1.0.2'



    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}*/